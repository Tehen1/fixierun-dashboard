user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CSP for Google APIs
    add_header Content-Security-Policy "
        default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:;
        script-src 'self' 'unsafe-inline' 'unsafe-eval' 
            https://apis.google.com 
            https://accounts.google.com
            https://cdn.tailwindcss.com 
            https://cdn.jsdelivr.net
            https://kit.fontawesome.com
            https://maps.googleapis.com;
        connect-src 'self' 
            https://apis.google.com 
            https://accounts.google.com
            https://www.googleapis.com;
        frame-src 'self' 
            https://accounts.google.com;
        img-src 'self' data: https: blob:;
        style-src 'self' 'unsafe-inline' 
            https://fonts.googleapis.com 
            https://cdn.tailwindcss.com;
        font-src 'self' 
            https://fonts.gstatic.com
            https://kit.fontawesome.com;
    " always;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Enable caching for static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # Cache HTML with shorter expiration
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # Cache manifest and service worker with short expiration
        location ~* \.(json|js)$ {
            expires 1h;
            add_header Cache-Control "public";
        }

        # SPA routing - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;
            
            # Additional security headers for main page
            add_header X-Robots-Tag "index, follow" always;
            add_header X-UA-Compatible "IE=edge" always;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup and config files
        location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Apply rate limiting to specific endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
    }
}
