# FixieRun Dashboard - Environment Configuration
# Copy this file to .env and fill in your actual values

# =================================
# Google OAuth2 Configuration
# =================================
# Get these from Google Cloud Console > APIs & Services > Credentials
GOOGLE_CLIENT_ID=your_google_client_id_here.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# =================================
# Google APIs Configuration
# =================================
# Get this from Google Cloud Console > APIs & Services > Credentials
GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here

# =================================
# Application Configuration
# =================================
# Your domain where the app is deployed
APP_DOMAIN=https://app.fixie.run
APP_NAME=FixieRun Dashboard

# =================================
# Blockchain Configuration (Optional)
# =================================
# For real blockchain integration
ETHEREUM_PROVIDER_URL=https://mainnet.infura.io/v3/your_infura_project_id
ETHERSCAN_API_KEY=your_etherscan_api_key_here

# For testnet development
ETHEREUM_TESTNET_URL=https://goerli.infura.io/v3/your_infura_project_id
USE_TESTNET=true

# =================================
# Analytics Configuration (Optional)
# =================================
# Google Analytics
GA_MEASUREMENT_ID=GA_MEASUREMENT_ID

# Mixpanel Analytics
MIXPANEL_TOKEN=your_mixpanel_token_here

# =================================
# Security Configuration
# =================================
# JWT Secret for session management (if using backend)
JWT_SECRET=your_super_secret_jwt_key_here

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:9000,https://app.fixie.run

# =================================
# Database Configuration (Optional)
# =================================
# If you want to add a backend database
DATABASE_URL=postgresql://user:password@host:port/database
REDIS_URL=redis://localhost:6379

# =================================
# Development Configuration
# =================================
# Development mode settings
NODE_ENV=production
DEBUG=false
LOG_LEVEL=info

# Local development port
PORT=3000

# =================================
# API Keys for External Services
# =================================
# CoinGecko API (for real crypto prices)
COINGECKO_API_KEY=your_coingecko_api_key

# Etherscan API (for gas prices)
ETHERSCAN_API_KEY=your_etherscan_api_key

# OpenWeather API (for weather data)
OPENWEATHER_API_KEY=your_openweather_api_key

# =================================
# Email Configuration (Optional)
# =================================
# For notifications and user communication
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_app_password

# SendGrid (alternative)
SENDGRID_API_KEY=your_sendgrid_api_key
FROM_EMAIL=noreply@your-domain.com

# =================================
# Storage Configuration (Optional)
# =================================
# AWS S3 for file storage
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_BUCKET_NAME=fixierun-storage
AWS_REGION=us-east-1

# Cloudinary for image storage
CLOUDINARY_CLOUD_NAME=your_cloud_name
CLOUDINARY_API_KEY=your_api_key
CLOUDINARY_API_SECRET=your_api_secret

# =================================
# Rate Limiting Configuration
# =================================
# API rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =================================
# Feature Flags
# =================================
# Enable/disable features
ENABLE_GOOGLE_DRIVE_SYNC=true
ENABLE_BLOCKCHAIN_FEATURES=true
ENABLE_PUSH_NOTIFICATIONS=false
ENABLE_OFFLINE_MODE=true
ENABLE_SOCIAL_SHARING=true

# =================================
# PWA Configuration
# =================================
# Service worker and caching
ENABLE_SERVICE_WORKER=true
CACHE_VERSION=v1.0.0
OFFLINE_CACHE_DURATION=86400000

# =================================
# Monitoring Configuration
# =================================
# Sentry for error tracking
SENTRY_DSN=your_sentry_dsn_here

# LogRocket for session replay
LOGROCKET_APP_ID=your_logrocket_app_id
# API Configuration
NEXT_PUBLIC_API_URL=http://localhost:8000

# OpenTelemetry Configuration
NEXT_PUBLIC_ENABLE_TRACING=true
NEXT_PUBLIC_OTLP_ENDPOINT=https://tempo-prod-10-prod-eu-west-2.grafana.net/otlp/v1/traces
NEXT_PUBLIC_GRAFANA_CLOUD_AUTH=your_grafana_cloud_auth_here

# Feature Flags
NEXT_PUBLIC_ENABLE_EXPERIMENTAL_FEATURES=true
# Recommended for most uses
DATABASE_URL=postgres://neondb_owner:npg_OZmgpdNLXn30@ep-flat-salad-ab9sgprn-pooler.eu-west-2.aws.neon.tech/neondb?sslmode=require

# For uses requiring a connection without pgbouncer
DATABASE_URL_UNPOOLED=postgresql://neondb_owner:npg_OZmgpdNLXn30@ep-flat-salad-ab9sgprn.eu-west-2.aws.neon.tech/neondb?sslmode=require

# Parameters for constructing your own connection string
e=ep-flat-salad-ab9sgprn-pooler.eu-west-2.aws.neon.tech
PGHOST_UNPOOLED=ep-flat-salad-ab9sgprn.eu-west-2.aws.neon.tech
PGUSER=neondb_owner
PGDATABASE=neondb
PGPASSWORD=npg_OZmgpdNLXn30

# Parameters for Vercel Postgres Templates
POSTGRES_URL=postgres://neondb_owner:npg_OZmgpdNLXn30@ep-flat-salad-ab9sgprn-pooler.eu-west-2.aws.neon.tech/neondb?sslmode=require
POSTGRES_URL_NON_POOLING=postgres://neondb_owner:npg_OZmgpdNLXn30@ep-flat-salad-ab9sgprn.eu-west-2.aws.neon.tech/neondb?sslmode=require
POSTGRES_USER=neondb_owner
POSTGRES_HOST=ep-flat-salad-ab9sgprn-pooler.eu-west-2.aws.neon.tech
POSTGRES_PASSWORD=npg_OZmgpdNLXn30
POSTGRES_DATABASE=neondb
POSTGRES_URL_NO_SSL=postgres://neondb_owner:npg_OZmgpdNLXn30@ep-flat-salad-ab9sgprn-pooler.eu-west-2.aws.neon.tech/neondb
POSTGRES_PRISMA_URL=postgres://neondb_owner:npg_OZmgpdNLXn30@ep-flat-salad-ab9sgprn-pooler.eu-west-2.aws.neon.tech/neondb?connect_timeout=15&sslmode=requireEXPERIMENTATION_CONFIG_ITEM_KEY="statsig-5JUB1f7R0ZxzeBmAqgr5RZ"
NEXT_PUBLIC_STATSIG_CLIENT_KEY="client-cQhQLIZ2685JJJYgLd4jR8ovyL8zqWpGKxKxNNZy7hK"
STATSIG_SERVER_API_KEY="secret-1BmPXNj6hGfY6QRmx8AQmZ3x94jsEonST4op4k4u3iU"
EXPERIMENTATION_CONFIG="https://edge-config.vercel.com/ecfg_foqckbp9fa70fblvd4zufxrsghnn?token=8675595d-62b0-43b9-bfa0-988311cf5093"POSTGRES_URL="postgres://postgres.yhfwgqjvpgxnzjzeynob:BUCBDzhaNP879ZkO@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require&supa=base-pooler.x"
POSTGRES_PRISMA_URL="postgres://postgres.yhfwgqjvpgxnzjzeynob:BUCBDzhaNP879ZkO@aws-0-us-east-1.pooler.supabase.com:6543/postgres?sslmode=require&supa=base-pooler.x"
SUPABASE_URL="https://yhfwgqjvpgxnzjzeynob.supabase.co"
NEXT_PUBLIC_SUPABASE_URL="https://yhfwgqjvpgxnzjzeynob.supabase.co"
POSTGRES_URL_NON_POOLING="postgres://postgres.yhfwgqjvpgxnzjzeynob:BUCBDzhaNP879ZkO@aws-0-us-east-1.pooler.supabase.com:5432/postgres?sslmode=require"
SUPABASE_JWT_SECRET="P7VNRng5JA61EE/xVEQxcl0BCsLSnXx2ybc4AH2YRPk/a/ddn+se52Ggm9du0smzb2hvXJLyPUG15VkhuP3WOA=="
POSTGRES_USER="postgres"
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InloZndncWp2cGd4bnpqemV5bm9iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzcyNjA4OTAsImV4cCI6MjA1MjgzNjg5MH0.fEFlBlUpFFZL764xxSP_MMxpQ7D6FLiZNjZ6WjBrTWs"
mysql_POSTGRES_PASSWORD="BUCBDzhaNP879ZkO"
POSTGRES_DATABASE="postgres"
SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InloZndncWp2cGd4bnpqemV5bm9iIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczNzI2MDg5MCwiZXhwIjoyMDUyODM2ODkwfQ.CgEXdaBZCDRQ61S9VuroNa1o8yZgptzNo-WxJ_IKnBs"
mysql_POSTGRES_HOST="db.yhfwgqjvpgxnzjzeynob.supabase.co"
mysql_NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InloZndncWp2cGd4bnpqemV5bm9iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzcyNjA4OTAsImV4cCI6MjA1MjgzNjg5MH0.fEFlBlUpFFZL764xxSP_MMxpQ7D6FLiZNjZ6WjBrTWs"
DATABASE_URL=postgres://neondb_owner:npg_MLUZfKs9E2bv@ep-crimson-grass-abeyuu6c-pooler.eu-west-2.aws.neon.tech/neondb?sslmode=require

DATABASE_URL_UNPOOLED=postgresql://neondb_owner:npg_MLUZfKs9E2bv@ep-crimson-grass-abeyuu6c.eu-west-2.aws.neon.tech/neondb?sslmode=require

PGHOST=ep-crimson-grass-abeyuu6c-pooler.eu-west-2.aws.neon.tech
PGHOST_UNPOOLED=ep-crimson-grass-abeyuu6c.eu-west-2.aws.neon.tech
PGUSER=neondb_owner
PGDATABASE=neondb
PGPASSWORD=npg_MLUZfKs9E2bv

POSTGRES_URL=postgres://neondb_owner:npg_MLUZfKs9E2bv@ep-crimson-grass-abeyuu6c-pooler.eu-west-2.aws.neon.tech/neondb?sslmode=require
POSTGRES_URL_NON_POOLING=postgres://neondb_owner:npg_MLUZfKs9E2bv@ep-crimson-grass-abeyuu6c.eu-west-2.aws.neon.tech/neondb?sslmode=require
POSTGRES_USER=neondb_owner
POSTGRES_HOST=ep-crimson-grass-abeyuu6c-pooler.eu-west-2.aws.neon.tech
POSTGRES_PASSWORD=npg_MLUZfKs9E2bv
POSTGRES_DATABASE=neondb
POSTGRES_URL_NO_SSL=postgres://neondb_owner:npg_MLUZfKs9E2bv@ep-crimson-grass-abeyuu6c-pooler.eu-west-2.aws.neon.tech/neondb
POSTGRES_PRISMA_URL=postgres://neondb_owner:npg_MLUZfKs9E2bv@ep-crimson-grass-abeyuu6c-pooler.eu-west-2.aws.neon.tech/neondb?connect_timeout=15&sslmode=require